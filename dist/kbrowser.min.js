class Remote{constructor(e){this.url=e}async get(e={}){return fetch(this.url,{method:"GET",...e}).then(async e=>{if(e)return e.json();throw new Error("An error occurred in the api, check the log of the response.")}).then(e=>e).catch(e=>e.message)}async post(e={}){return fetch(this.url,{method:"POST",...e}).then(e=>{if(e)return e.json();throw new Error("An error occurred in the api, check the log of the response.")}).then(e=>e).catch(e=>e.message)}async post(e={}){return fetch(this.url,{method:"POST",...e}).then(e=>{if(e)return e.json();throw new Error("An error occurred in the api, check the log of the response.")}).then(e=>e).catch(e=>e.message)}async put(e={}){return fetch(this.url,{method:"PUT",...e}).then(e=>{if(e)return e.json();throw new Error("An error occurred in the api, check the log of the response.")}).then(e=>e).catch(e=>e.message)}async delete(e={}){return fetch(this.url,{method:"DELETE",...e}).then(e=>{if(e)return e.json();throw new Error("An error occurred in the api, check the log of the response.")}).then(e=>e).catch(e=>e.message)}}class Kquery{constructor(e){this.elements=[e]}load(e){return document.addEventListener("DOMContentLoaded",e),this}getElements(){return document.querySelectorAll(this.elements)}getElement(){return document.querySelector(this.elements)}event(t,r){return this.getElements().forEach(e=>e.addEventListener(t,r)),this}remote(e){return new Remote(e)}insertHTML(t){return this.getElements().forEach(e=>e.innerHTML+=t),this}disableElement(t){return this.getElements().forEach(e=>e.disabled=t),this}addClass(e){return this.getElement().classList.add(e),this}removeClass(e){return this.getElement().classList.remove(e),this}replaceClass(e,t){return this.getElement().classList.replace(e,t),this}getDataSet(){return this.getElement().dataset}getDataSets(){return this.getElements().forEach(e=>e.dataset)}removeChildrens(){return this.getElement().innerHTML="",this}}const $=e=>new Kquery(e);